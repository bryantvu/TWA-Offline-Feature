/*
      Copyright 2021. Futurewei Technologies Inc. All rights reserved.
      Licensed under the Apache License, Version 2.0 (the "License");
      you may not use this file except in compliance with the License.
      You may obtain a copy of the License at
        http:  www.apache.org/licenses/LICENSE-2.0
      Unless required by applicable law or agreed to in writing, software
      distributed under the License is distributed on an "AS IS" BASIS,
      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
      See the License for the specific language governing permissions and
      limitations under the License.
*/

import groovy.xml.MarkupBuilder

plugins {
    id 'com.android.application'
    id 'com.huawei.agconnect'
    
}

def twaManifest = [
    applicationId: 'com.pictroom.android',
    hostName: 'pictroom.com', // The domain being opened in the TWA.
    launchUrl: '/product/?pwa=true', // The start path for the TWA. Must be relative to the domain.
    name: 'TWA IAP Demo', // The application name.
    launcherName: 'TWA IAP Demo', // The name shown on the Android Launcher.
    themeColor: '#3F51B5', // The color used for the status bar.
    navigationColor: '#3F51B5', // The color used for the navigation bar.
    navigationColorDark: '#3F51B5', // The color used for the dark navbar.
    navigationDividerColor: '#3F51B5', // The navbar divider color.
    navigationDividerColorDark: '#3F51B5', // The dark navbar divider color.
    backgroundColor: '#3F51B5', // The color used for the splash screen background.
    enableNotifications: false, // Set to true to enable notification delegation.
    // The duration of fade out animation in milliseconds to be played when removing splash screen.
    splashScreenFadeOutDuration: 300,
    generatorApp: 'PWABuilder', // Application that generated the Android Project
    // The fallback strategy for when Trusted Web Activity is not avilable. Possible values are
    // 'customtabs' and 'webview'.
    fallbackType: 'customtabs',
    enableSiteSettingsShortcut: 'true',
    orientation: 'default',
]

android {
    compileSdkVersion 31
    defaultConfig {
        applicationId "com.pictroom.android"
        minSdkVersion 19
        targetSdkVersion 31
        versionCode 1
        versionName "1.0.0.0"

        multiDexEnabled true

        // The name for the application
        resValue "string", "appName", twaManifest.name

        // The name for the application on the Android Launcher
        resValue "string", "launcherName", twaManifest.launcherName

        // The URL that will be used when launching the TWA from the Android Launcher
        def launchUrl = "https://" + twaManifest.hostName + twaManifest.launchUrl
        resValue "string", "launchUrl", launchUrl

        
            // The URL the Web Manifest for the Progressive Web App that the TWA points to. This
            // is used by Chrome OS to open the Web version of the PWA instead of the TWA, as it
            // will probably give a better user experience for non-mobile devices.
            resValue "string", "webManifestUrl", ''
        

        
            // The data for the app to support web share target.
            resValue "string", "shareTarget", '{\\"action\\":\\"/share-target/\\",\\"method\\":\\"GET\\",\\"params\\":{\\"title\\":\\"title\\",\\"text\\":\\"text\\",\\"url\\":\\"url\\"}}'
        

        // The hostname is used when building the intent-filter, so the TWA is able to
        // handle Intents to open https://svgomg.firebaseapp.com.
        resValue "string", "hostName", twaManifest.hostName

        // This variable below expresses the relationship between the app and the site,
        // as documented in the TWA documentation at
        // https://developers.google.com/web/updates/2017/10/using-twa#set_up_digital_asset_links_in_an_android_app
        // and is injected into the AndroidManifest.xml
        resValue "string", "assetStatements",
                '[{ \\"relation\\": [\\"delegate_permission/common.handle_all_urls\\"],' +
                        '\\"target\\": {\\"namespace\\": \\"web\\", \\"site\\": \\"https://' +
                        twaManifest.hostName + '\\"}}]'

        // This attribute sets the status bar color for the TWA. It can be either set here or in
        // `res/values/colors.xml`. Setting in both places is an error and the app will not
        // compile. If not set, the status bar color defaults to #FFFFFF - white.
        resValue "color", "colorPrimary", twaManifest.themeColor

        // This attribute sets the navigation bar color for the TWA. It can be either set here or
        // in `res/values/colors.xml`. Setting in both places is an error and the app will not
        // compile. If not set, the navigation bar color defaults to #FFFFFF - white.
        resValue "color", "navigationColor", twaManifest.navigationColor

        // This attribute sets the dark navigation bar color for the TWA. It can be either set here
        // or in `res/values/colors.xml`. Setting in both places is an error and the app will not
        // compile. If not set, the navigation bar color defaults to #000000 - black.
        resValue "color", "navigationColorDark", twaManifest.navigationColorDark

        // This attribute sets the navbar divider color for the TWA. It can be either 
        // set here or in `res/values/colors.xml`. Setting in both places is an error and the app 
        // will not compile. If not set, the divider color defaults to #00000000 - transparent.
        resValue "color", "navigationDividerColor", twaManifest.navigationDividerColor

        // This attribute sets the dark navbar divider color for the TWA. It can be either 
        // set here or in `res/values/colors.xml`. Setting in both places is an error and the 
        //app will not compile. If not set, the divider color defaults to #000000 - black.
        resValue "color", "navigationDividerColorDark", twaManifest.navigationDividerColorDark

        // Sets the color for the background used for the splash screen when launching the
        // Trusted Web Activity.
        resValue "color", "backgroundColor", twaManifest.backgroundColor

        // Defines a provider authority fot the Splash Screen
        resValue "string", "providerAuthority", twaManifest.applicationId + '.fileprovider'

        // The enableNotification resource is used to enable or disable the
        // TrustedWebActivityService, by changing the android:enabled and android:exported
        // attributes
        resValue "bool", "enableNotification", twaManifest.enableNotifications.toString()

        // The splashScreenFadeOutDuration resource is used to set the duration of fade out animation in milliseconds
        // to be played when removing splash screen. The default is 0 (no animation).
        resValue "integer", "splashScreenFadeOutDuration", twaManifest.splashScreenFadeOutDuration.toString()

        resValue "string", "generatorApp", twaManifest.generatorApp

        resValue "string", "fallbackType", twaManifest.fallbackType

        resValue "bool", "enableSiteSettingsShortcut", twaManifest.enableSiteSettingsShortcut
        resValue "string", "orientation", twaManifest.orientation
    }
    signingConfigs {
        config {
            storeFile file('./pictroom.jks')
            keyAlias 'Pictroom'
            keyPassword 'SpvkZwvnStcQtkWWnGwJzURzEBzzjCpKTegNFXuW'
            storePassword 'wEsjEgYqqKJzvcwSSfnYdwjNVrktPaUfrReyJggX'
        }
    }
    buildTypes {
        debug {
            signingConfig signingConfigs.config
        }
        release {
            signingConfig signingConfigs.config
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    lintOptions {
        checkReleaseBuilds false
    }
}

repositories {
    
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.androidbrowserhelper:locationdelegation:1.0.1'
    implementation 'com.google.androidbrowserhelper:androidbrowserhelper:2.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation 'com.huawei.hms:iap:6.0.0.300'
    implementation 'com.huawei.agconnect:agconnect-applinking:1.6.0.300'
    implementation "com.google.code.gson:gson:2.8.6"
    implementation 'com.huawei.hms:hwid:5.2.0.300'
    implementation 'com.android.support:multidex:1.0.3'
    implementation 'com.google.android.gms:play-services-base:18.0.1'

}
